#!/usr/bin/env node
'use strict';

var program = require('commander');
var api = require('../lib/commands/generateApi/generateApi.js');
var deploy = require('../lib/commands/deployApi/deployApi.js');
var tests = require('../lib/commands/generateTest/generateTest');
var ci = require('../lib/commands/generateCIProject/generateCIProject');
var version = require('../lib/util/cli').version();
var executed = false;

program.version(version);

program
    .usage('<api> <options>')
    .command('generateApi [apiProxy]')
    .option('-s, --source <source>', 'openapi File Source.')
    .option('-d, --destination <destination>', 'API Bundle destination location.')
    .option('-D, --deploy', 'Deploy to Apigee Edge')
    .option('-b, --baseuri <baseuri>', 'Apigee Edge EndPoint to Deploy')
    .option('-t, --tests', 'Generate tests')
    .option('-B, --bundle', 'Generate apiproxy bundle zip')
    .option('-o, --organization <organization>', 'Apigee Edge Organization to Deploy')
    .option('-e, --environments <environments>', 'Apigee Edge Environment to Deploy')
    .option('-v, --virtualhosts <virtualhosts>', 'Apigee Edge virtual hosts to Deploy')
    .option('-u, --username <username>', 'Apigee Edge Username to Deploy')
    .option('-p, --password <password>', 'Apigee Edge Password to Deploy')

    .description('Generates Apigee API Bundle')
    .action(function (apiProxy, options) {
        executed = true;
        api.generateApi(apiProxy, options, function (err, reply) {
            if (err) {
                console.log(err);
                process.exit(1);
            }
            else {
                if (options.destination) {
                    console.log('Apigee API bundle generated in location ' + options.destination);
                }
                else {
                    console.log('Apigee API bundle generated ');
                }

                if (options.tests) {
                    tests.generateTests(options, function (err, resp) {
                        if (err) {
                            console.log("Unable to generate tests.");
                            process.exit(1);
                        }

                        if (options.destination) {
                            console.log('Tests generated successfully in location ' + options.destination);
                        }
                        else {
                            console.log('Tests generated successfully');
                        }

                        if (options.deploy) {
                            deploy.deployApi(apiProxy, options, function (err, reply) {
                                if (err) {
                                    console.log(err);
                                    process.exit(1);
                                }
                                else {
                                    console.log('Deployment to Apigee successfully completed.');
                                }
                            });
                        }
                    });
                }
            }
        });
    });

program.command('generateCIProject')
    .option('-s, --source <source>', 'openapi File Source.')
    .option('-d, --destination <destination>', 'API Bundle destination location.')
    .description('Generates Apigee API Project with CI base')
    .action(function (options) {
        executed = true;
        api.generateApi("develop", options, function (err, reply) {
            if (err) {
                console.log(err);
                process.exit(1);
            }
            else {
                tests.generateTests(options, function (err, resp) {
                    if (err) {
                        console.log("Unable to generate tests.");
                        process.exit(1);
                    }

                    ci.generateCIProject(options, function (err, resp) {
                        console.log("CI Project generated successfully");
                    });
                });
            }
        });
    });

program.on('--help', function () {
    console.log('  Examples:');
    console.log('');
    console.log('    $ openapi2apigee generateApi --help');
    console.log('    $ openapi2apigee generateApi -s http://petstore.openapi.io/v2/openapi.json -d /Users/Anil/Desktop/ -D petStore');
    console.log('');
});

program.parse(process.argv);
if (!process.argv.slice(2).length || !executed) {
    program.outputHelp();
    process.exit(1);
}
